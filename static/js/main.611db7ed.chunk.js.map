{"version":3,"sources":["components/pages/Navbar.jsx","APIService.js","components/project/FormProject.js","components/project/DetailProject.js","components/project/Project.js","components/pages/Home.js","components/client/FormClient.js","components/client/DetailClient.js","components/client/Client.js","components/Nav.js","App.js","components/Login.js","index.js"],"names":["NavBar","_jsx","className","children","style","marginLeft","href","APIService","_classCallCheck","_createClass","key","value","client_id","body","token","fetch","concat","method","headers","Authorization","JSON","stringify","then","response","json","project_id","FormProject","props","_useState","useState","_useState2","_slicedToArray","ProjectName","setProjectName","_useState3","_useState4","ProjectDeadline","setProjectDeadline","_useState5","_useState6","ProjectDescription","setProjectDescription","_useState7","_useState8","ProjectStatus","setProjectStatus","_useState9","_useState10","ProjectClient","setProjectClient","_useState11","_useState12","clients","setClients","_useCookies","useCookies","_useCookies2","useEffect","ProjectInstance","name","deadline","description","status","client","catch","error","console","log","_jsxs","onClick","setProjectInstance","htmlFor","type","id","placeholder","onChange","e","target","rows","selected","disabled","hidden","map","UpdateProject","updatedProjects","toast","success","CreateProject","createdProject","StyledProjectDetail","styled","div","_templateObject","_taggedTemplateLiteral","DetailProject","setActiveProject","ActiveProject","toUpperCase","dateFormat","ProjectTodos","todos","task","target_time","today","Date","Project","projects","setProjects","setProjectTodos","marginTop","color","project","formatDate","diffInDays","viewProjectDetail","editProjectBtn","DeleteProject","new_project","filter","myproject","deleteProjectBtn","_toConsumableArray","Home","logUser","_useCookies3","_useCookies4","history","useHistory","greeting","setGreeting","currentHour","getHours","padding","document","cookie","push","go","FormClient","ClientName","setClientName","ClientEmail","setClientEmail","ClientPhone","setClientPhone","ClientInstance","email","phone","setClientInstance","UpdateClient","updatedClient","CreateClient","createdClient","StyledClientProject","DetailClient","setClientProjects","ActiveClient","ClientProjects","Client","setActiveClient","detailBtn","editClientBtn","window","location","DeleteClient","new_client","myclient","deleteClientBtn","StyledMenu","ul","_ref","open","_ref2","StyledLink","Link","_templateObject2","Menu","_ref3","toggle","Router","to","Switch","Route","path","StyledBurger","button","_templateObject3","_ref4","_ref5","_ref6","_ref7","_ref8","Burger","_ref9","Nav","_React$useState","React","_React$useState2","setOpen","App","_Component","_inherits","_super","_createSuper","apply","arguments","ToastContainer","Component","Login","username","setUsername","password","setPassword","setToken","setLogUser","isLogin","setLogin","fname","setFname","lname","setLname","setEmail","validateEmail","test","LoginUser","CreateUser","first_name","last_name","AuthRouter","CookiesProvider","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.611db7ed.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-custom navbar-dark bg-dark\">\n      <a className=\"navbar-brand \" style={{ marginLeft: \"2rem\" }} href=\"#\">\n        Project Collaboration Application\n      </a>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","export default class APIService {\n  static UpdateClient(client_id, body, token) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/api/client/${client_id}/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n      },\n      body: JSON.stringify(body),\n    }).then((response) => response.json());\n  }\n\n  static UpdateProject(project_id, body, token) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/api/project/${project_id}/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n      },\n      body: JSON.stringify(body),\n    }).then((response) => response.json());\n  }\n\n  static CreateProject(body, token) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/api/project/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n      },\n      body: JSON.stringify(body),\n    }).then((response) => response.json());\n  }\n\n  static CreateClient(body, token) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/api/client/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n      },\n      body: JSON.stringify(body),\n    }).then((response) => response.json());\n  }\n\n  static DeleteClient(client_id, token) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/api/client/${client_id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n      },\n    });\n  }\n\n  static DeleteProject(project_id, token) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/api/project/${project_id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n      },\n    });\n  }\n  static LoginUser(body) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/auth/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    }).then((response) => response.json());\n  }\n\n  static CreateUser(body) {\n    return fetch(`https://projectmanagementappv2.azurewebsites.net/api/users/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    }).then((response) => response.json());\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"../Modal.css\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport APIService from \"../../APIService\";\n\nfunction FormProject(props) {\n  const [ProjectName, setProjectName] = useState(\"\");\n  const [ProjectDeadline, setProjectDeadline] = useState(\"\");\n  const [ProjectDescription, setProjectDescription] = useState(\"\");\n  const [ProjectStatus, setProjectStatus] = useState(\"\");\n  const [ProjectClient, setProjectClient] = useState(\"\");\n\n  const [clients, setClients] = useState([]);\n\n  const [token, setToken] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    setProjectName(props.ProjectInstance.name);\n    setProjectDeadline(props.ProjectInstance.deadline);\n    setProjectDescription(props.ProjectInstance.description);\n    setProjectStatus(props.ProjectInstance.status);\n    setProjectClient(props.ProjectInstance.client);\n  }, [props.ProjectInstance]);\n\n  // FETCH THE CLIENTS HERE TO BE RENDERED FOR THE DROPDOWN MENU IN THE FORM\n  useEffect(() => {\n    fetch(\"https://projectmanagementappv2.azurewebsites.net/api/client\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setClients(response))\n      .catch((error) => console.log(error));\n  }, [token]);\n\n  const updateProject = () => {\n    APIService.UpdateProject(\n      props.ProjectInstance.id,\n      {\n        name: ProjectName,\n        deadline: ProjectDeadline,\n        description: ProjectDescription,\n        status: ProjectStatus,\n        client: ProjectClient,\n      },\n      token[\"loginToken\"]\n    ).then((response) => {\n      props.updatedProjects(response);\n      props.setProjectInstance(null)\n\n      toast.success('Project updated successfully!'\n      //.then(props.setClientInstance(null))\n      );\n\n    });\n    \n  };\n\n  const createProject = () => {\n    APIService.CreateProject(\n      {\n        name: ProjectName,\n        deadline: ProjectDeadline,\n        description: ProjectDescription,\n        status: ProjectStatus,\n        client: ProjectClient,\n      },\n      token[\"loginToken\"]\n    ).then((response) => {props.createdProject(response)\n      props.setProjectInstance(null)\n      toast.success('Project created successfully!');\n\n    })\n    // .then(props.setProjectInstance(null));\n\n  };\n\n  return (\n    <div className=\"overlay\">\n      {props.ProjectInstance ? (\n        <div className=\"mb-3 text-light modal-card\">\n          <button\n            onClick={() => props.setProjectInstance(null)}\n            className=\"btn btn-primary close-btn\"\n          >\n            x\n          </button>\n          <label htmlFor=\"name\" className=\"form-label\">\n            Project Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            placeholder=\"Enter project's name...\"\n            value={ProjectName}\n            onChange={(e) => setProjectName(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"deadline\" className=\"form-label\">\n            Project Deadline\n          </label>\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            id=\"deadline\"\n            placeholder=\"Enter project's deadline...\"\n            value={ProjectDeadline}\n            onChange={(e) => setProjectDeadline(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"description\" className=\"form-label\">\n            Technology Stack\n          </label>\n          <textarea\n            className=\"form-control\"\n            rows=\"4\"\n            id=\"description\"\n            placeholder=\"Enter project's name...\"\n            value={ProjectDescription}\n            onChange={(e) => setProjectDescription(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"status\" className=\"form-label\">\n            Project Status\n          </label>\n          <select\n            onChange={(e) => setProjectStatus(e.target.value)}\n            className=\"form-select\"\n            name=\"status\"\n            id=\"status\"\n          >\n            <option value=\"none\" selected disabled hidden>\n              Select a Status...\n            </option>\n            <option value=\"Pending\">Pending</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Done\">Done</option>\n          </select>\n          <br />\n\n          <select\n            onChange={(e) => setProjectClient(e.target.value)}\n            className=\"form-select\"\n            name=\"client\"\n            id=\"client\"\n          >\n            <option value=\"none\" selected disabled hidden>\n              Select a Collaborator...\n            </option>\n            {clients.map((client) => {\n              return <option value={client.name}>{client.name}</option>;\n            })}\n          </select>\n          <br />\n\n          {props.ProjectInstance.id ? (\n            <button onClick={updateProject} className=\"btn btn-primary\">\n              Update Project\n            </button>\n          ) : (\n            <button onClick={createProject} className=\"btn btn-primary\">\n              Create Project\n            </button>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FormProject;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport dateFormat from \"dateformat\";\n\nconst StyledProjectDetail = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: rgba(0, 0, 0, 0.5);\n\n  .project-detail-card {\n    background-color: rgb(20, 26, 31);\n    width: 1000px;\n    padding: 2em 5em;\n    position: relative;\n  }\n`;\n\nconst DetailProject = (props) => {\n  return (\n    <StyledProjectDetail>\n      <div  className=\"project-detail-card text-white\">\n        <div className=\"project-detail\">\n          <div className=\"project-detail-header d-flex align-items-center justify-content-between\">\n            <h1>Project Details</h1>\n            <button\n              onClick={() => props.setActiveProject(null)}\n              className=\"btn btn-primary\"\n            >\n              x\n            </button>\n          </div>\n          <hr />\n          <h2>{props.ActiveProject.name.toUpperCase()}</h2>\n          <h5>Deadline: {dateFormat(props.ActiveProject.deadline, \"mmmm dS, yyyy\")}</h5>\n          <h5>Technology Stack: {props.ActiveProject.description}</h5>\n          <h5>\n            <strong>Status: {props.ActiveProject.status}</strong>\n          </h5>\n        </div>\n        <br />\n        <br />\n        <div className=\"project-todos\">\n          <h1>Todos</h1>\n          <hr />\n          <table className=\"table text-white\">\n            <thead>\n              <tr>\n                <th>Task</th>\n                <th>Targetted Time</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.ProjectTodos\n                ? props.ProjectTodos.map((todos) => {\n                    return (\n                      <tr key={todos.id}>\n                        <td>{todos.task}</td>\n                        <td>\n                          {dateFormat(todos.target_time, \"mmmm dS, yyyy\")}\n                        </td>\n                        <td>{todos.status}</td>\n                      </tr>\n                    );\n                  })\n                : null}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </StyledProjectDetail>\n  );\n};\n\nexport default DetailProject;\n","import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport \"./Project.css\";\nimport APIService from \"../../APIService\";\nimport FormProject from \"./FormProject\";\nimport DetailProject from \"./DetailProject\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { formatDate, addDays, diffInDays, isLeapYear } from '@rakeshmalik593/date-time-utils';\n\nconst today = new Date();\n\nconst Project = () => {\n  const [projects, setProjects] = useState([]);\n  const [token] = useCookies([\"loginToken\"]);\n  // const dateTime = addDays(new Date(), 5);\n  // const now  = new Date();\n  useEffect(() => {\n    fetch(\"https://projectmanagementappv2.azurewebsites.net/api/project\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setProjects(response)) // update projects state variable\n\n      .catch((error) => console.log(error));\n  }, [token]);\n\n  const [ProjectInstance, setProjectInstance] = useState(null);\n\n  const editProjectBtn = (project) => {\n    setProjectInstance(project);\n  };\n\n  const deleteProjectBtn = (project) => {\n    APIService.DeleteProject(project.id, token[\"loginToken\"])\n      .then(() => {\n        const new_project = projects.filter((myproject) => {\n          if (myproject.id === project.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        setProjects(new_project);\n        toast.success('Project deleted successfully!');\n      })\n      .catch((error) => console.log(error));\n  };\n  const updatedProjects = (project) => {\n    const new_project = projects.map((myproject) => {\n      if (myproject.id === project.id) {\n        return project;\n      } else {\n        return myproject;\n      }\n    });\n    setProjects(new_project);\n  };\n\n  const projectNewForm = () => {\n    setProjectInstance({\n      name: \"\",\n      deadline: \"\",\n      description: \"\",\n      status: \"\",\n      client: \"\",\n    });\n  };\n\n  const createdProject = (project) => {\n    const new_project = [...projects, project];\n    setProjects(new_project);\n  };\n\n  const [ActiveProject, setActiveProject] = useState();\n  const [ProjectTodos, setProjectTodos] = useState();\n\n  const viewProjectDetail = (project) => {\n    setActiveProject(project);\n    fetch(`https://projectmanagementappv2.azurewebsites.net/api/todos?project=${project.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setProjectTodos(response));\n  };\n\n  return (\n    <div style={{ marginTop: \"5em\" }}>\n      <div>\n      {/* Current date and time: {formatDate(now)} */}\n    </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"project-header\">\n          <h1 style={{ color: \"burlywood\" }}>Your Exising Projects</h1>\n        </div>\n        <div className=\"project-header-btn d-flex\">\n          <div className=\"input-group\">\n            <select className=\"custom-select\" id=\"inputGroupSelect01\">\n              <option selected>Filter...</option>\n              <option value=\"1\">One</option>\n              <option value=\"2\">Two</option>\n              <option value=\"3\">Three</option>\n            </select>\n          </div>\n          <button\n            className=\"btn btn-primary btn-sm project-add-btn\"\n            onClick={projectNewForm}\n          >\n            &#43; Add a new project\n          </button>\n        </div>\n      </div>\n\n      <hr className=\"bg-light\" />\n      <div className=\"proj-wrapper text-white\">\n        {projects.map((project) => {\n          console.log(project)\n          return (\n            <div key={project.id} className=\"\">\n              <h3>{project.name}</h3>\n              <p>Deadline: {formatDate(new Date(project.deadline),'yyyy-MM-dd')}</p>\n              <p>Number of days left: {diffInDays(new Date(project.deadline),today)+1}</p>\n              <p>Technology Stack: {project.description}</p>\n              <p>Status: {project.status}</p>\n              <div className=\"project-btn-wrapper\">\n                <button\n                  onClick={() => viewProjectDetail(project)}\n                  className=\"btn btn-primary btn-sm\"\n                >\n                  View\n                </button>\n                <button\n                  onClick={() => editProjectBtn(project)}\n                  className=\"btn btn-primary btn-sm mx-3\"\n                >\n                  Update\n                </button>\n                <button\n                    onClick={() => deleteProjectBtn(project)}\n                    className=\"btn btn-delete btn-sm\"\n                  >\n                    Delete\n                  </button>\n              </div>\n              <hr />\n            </div>\n          );\n        })}\n      </div>\n      {ProjectInstance ? (\n        <FormProject\n          ProjectInstance={ProjectInstance}\n          setProjectInstance={setProjectInstance}\n          updatedProjects={updatedProjects}\n          createdProject={createdProject}\n        />\n      ) : null}\n\n      {ActiveProject ? (\n        <DetailProject\n          ActiveProject={ActiveProject}\n          setActiveProject={setActiveProject}\n          ProjectTodos={ProjectTodos}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"./Navbar.jsx\";\n\nimport Project from \"../project/Project\";\n\nconst Home = () => {\n  const [logUser, removeLogUser] = useCookies([\"fname\"]);\n  const [token, removeToken] = useCookies([\"loginToken\"]);\n  let history = useHistory();\n\n  const logout = () => {\n    document.cookie =\n      \"loginToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    document.cookie = \"fname=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n\n    history.push(\"/\");\n    history.go(\"/\");\n  };\n\n  const [greeting, setGreeting] = useState(\"\");\n\n  useEffect(() => {\n    const date = new Date();\n    const currentHour = date.getHours();\n\n    if (currentHour < 12 && currentHour > 3) {\n      setGreeting(\"Good Morning\");\n    } else if (currentHour >= 12 && currentHour <= 15) {\n      setGreeting(\"Good Afternoon\");\n    } else {\n      setGreeting(\"Good Evening\");\n    }\n  }, []);\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container\" style={{ padding: \"0 0 5em\" }}>\n      <div\n        className=\"header text-white d-flex align-items-center justify-content-between\"\n        style={{ marginTop: \"5em\" }}\n      >\n        <div className=\"text-wrapper\">\n          <h1>{greeting}</h1>\n          <h1 style={{  color: \"#c03439\" }}>\n            {logUser[\"fname\"]}\n          </h1>\n          <h3>What would you like to do today?</h3>\n        </div>\n        <div className=\"logout-wrapper\">\n          <button onClick={logout} className=\"btn btn-primary\">\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <Project />\n    </div>\n    </div>\n    \n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"../Modal.css\";\n\nimport APIService from \"../../APIService\";\n\nfunction FormClient(props) {\n  const [ClientName, setClientName] = useState(\"\");\n  const [ClientEmail, setClientEmail] = useState(\"\");\n  const [ClientPhone, setClientPhone] = useState(\"\");\n\n  const [token] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    setClientName(props.ClientInstance.name);\n    setClientEmail(props.ClientInstance.email);\n    setClientPhone(props.ClientInstance.phone);\n  }, [props.ClientInstance]);\n\n  const updateClient = () => {\n    APIService.UpdateClient(\n      props.ClientInstance.id,\n      {\n        name: ClientName,\n        email: ClientEmail,\n        phone: ClientPhone,\n      },\n      token[\"loginToken\"]\n    )\n      .then((response) => props.updatedClient(response))\n      .then(props.setClientInstance(null));\n  };\n\n  const createClient = () => {\n    APIService.CreateClient(\n      {\n        name: ClientName,\n        email: ClientEmail,\n        phone: ClientPhone,\n      },\n      token[\"loginToken\"]\n    )\n      .then((response) => props.createdClient(response))\n      .then(props.setClientInstance(null));\n  };\n\n  return (\n    <div className=\"overlay\">\n      {props.ClientInstance ? (\n        <div className=\"mb-3 modal-card\">\n          <button\n            onClick={() => props.setClientInstance(null)}\n            className=\"btn btn-primary close-btn\"\n          >\n            x\n          </button>\n          <div className=\"modal-header\">\n            <h4 className=\"modal-title text-white\">Collaborator Form</h4>\n          </div>\n          <br />\n          <label htmlFor=\"name\" className=\"form-label text-light\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            placeholder=\"Enter Collaborator's name...\"\n            value={ClientName}\n            onChange={(e) => setClientName(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"email\" className=\"form-label text-light\">\n            Email\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"email\"\n            placeholder=\"Enter Collaborator's email...\"\n            value={ClientEmail}\n            onChange={(e) => setClientEmail(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"phone\" className=\"form-label text-light\">\n            Phone\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phone\"\n            placeholder=\"Enter Collaborator's phone...\"\n            value={ClientPhone}\n            onChange={(e) => setClientPhone(e.target.value)}\n          />\n          <br />\n\n          {props.ClientInstance.id ? (\n            <button onClick={updateClient} className=\"btn btn-primary\">\n              Update Collaborator\n            </button>\n          ) : (\n            <button onClick={createClient} className=\"btn btn-primary\">\n              Create Collaborator\n            </button>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FormClient;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport dateFormat from \"dateformat\";\n\nconst StyledClientProject = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: rgba(0, 0, 0, 0.5);\n\n  .client-project-card {\n    background-color: rgb(20, 26, 31);\n    width: 1000px;\n    padding: 2em 5em;\n    position: relative;\n  }\n`;\n\nconst DetailClient = (props) => {\n  return (\n    <StyledClientProject>\n      <div className=\"client-project-card\">\n        <div className=\"client-detail text-white\">\n          <div className=\"client-detail-header d-flex align-items-center justify-content-between\">\n            <h1>Collaborator Details</h1>\n            <button\n              onClick={() => {\n                props.setClientProjects(null);\n              }}\n              className=\"btn btn-primary\"\n            >\n              x\n            </button>\n          </div>\n          <hr />\n          <h2>{props.ActiveClient.name}</h2>\n          <h5>{props.ActiveClient.email}</h5>\n          <h5>{props.ActiveClient.phone}</h5>\n        </div>\n        <br />\n        <br />\n        <div className=\"client-projects text-white\">\n          <h1>Projects</h1>\n          <hr />\n          <table className=\"table text-white\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Deadline</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.ClientProjects.map((project) => {\n                return (\n                  <tr key={project.id}>\n                    <td>{project.name}</td>\n                    <td>{dateFormat(project.deadline, \"mmmm dS, yyyy\")}</td>\n                    <td>{project.status}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </StyledClientProject>\n  );\n};\n\nexport default DetailClient;\n","import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"./Client.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FormClient from \"./FormClient\";\nimport APIService from \"../../APIService\";\nimport DetailClient from \"./DetailClient\";\n\nconst Client = () => {\n  const [clients, setClients] = useState([]);\n  const [token, setToken] = useCookies([\"loginToken\"]);\n\n  useEffect(() => {\n    fetch(\"https://projectmanagementappv2.azurewebsites.net/api/client\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setClients(response))\n      .catch((error) => console.log(error));\n  }, [token]);\n\n  const [ClientInstance, setClientInstance] = useState(null);\n\n  const [ActiveClient, setActiveClient] = useState(null);\n  const [ClientProjects, setClientProjects] = useState(null);\n\n  const detailBtn = (client) => {\n    setActiveClient(client);\n    fetch(`https://projectmanagementappv2.azurewebsites.net/api/project?client=${client.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token[\"loginToken\"]}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setClientProjects(response));\n  };\n\n  const editClientBtn = (client) => {\n    setClientInstance(client);\n  };\n\n  const updatedClient = (client) => {\n    const new_client = clients.map((myclient) => {\n      if (myclient.id === client.id) {\n        return client;\n      } else {\n        return myclient;\n      }\n    });\n\n    setClients(new_client);\n    toast.success(\"Collaborator updated successfully!\");\n  };\n\n  const clientNewForm = () => {\n    setClientInstance({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n    });\n  };\n\n  const createdClient = (client) => {\n    const new_client = [...clients, client];\n    setClients(new_client);\n    toast.success(\"Collaborator added successfully!\");\n\n  };\n\n  const deleteClientBtn = (client) => {\n    APIService.DeleteClient(client.id, token[\"loginToken\"])\n      .then(() => {\n        const new_client = clients.filter((myclient) => {\n          if (myclient.id === client.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        setClients(new_client);\n        toast.success(\"Collaborator deleted successfully!\");\n      })\n      .catch((error) => {\n        console.log(error);\n        toast.error(\"Collaborator failed to delete!\");\n      });\n  };\n\n  return (\n    <div className=\"container\" style={{ padding: \"5em 0\" }}>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div className=\"project-header\">\n          <h1 style={{ color: \"burlywood\" }}>Your Collaborators</h1>\n        </div>\n        <div className=\"project-header\">\n          <button className=\"btn btn-primary btn-sm\" onClick={clientNewForm}>\n            &#43; Add a new Collaborator\n          </button>\n        </div>\n      </div>\n      <hr className=\"bg-light\" />\n      <div className=\"card-wrapper d-flex flex-wrap flex-column flex-sm-row\">\n        {clients.map((client) => {\n          return (\n            <div key={client.id} className=\"card col-md-4 m-2 flex-grow-1 \">\n              <h3 className=\"card-header bg-dark border-dark text-white pt-3\">\n                {client.name}\n              </h3>\n              <div className=\"card-body bg-dark text-white\">\n                <p>Email: {client.email}</p>\n                <p>Phone: {client.phone}</p>\n\n                <div className=\"clients-btn-wrapper\">\n                  <button\n                    onClick={() => detailBtn(client)}\n                    className=\"btn btn-primary btn-sm\"\n                  >\n                    Detail\n                  </button>\n                  <button\n                    onClick={() => editClientBtn(client)}\n                    className=\"btn btn-primary btn-sm\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"btn btn-primary btn-sm\"\n                    onClick={() => {\n                      window.location.href = `mailto:${client.email}?subject=Request for collaboration`;\n                    }}\n                  >\n                    Send Mail\n                  </button>\n                  <button\n                    onClick={() => deleteClientBtn(client)}\n                    className=\"btn btn-delete btn-sm\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {ClientInstance ? (\n        <FormClient\n          ClientInstance={ClientInstance}\n          setClientInstance={setClientInstance}\n          updatedClient={updatedClient}\n          createdClient={createdClient}\n        />\n      ) : null}\n\n      {ClientProjects ? (\n        <DetailClient\n          ActiveClient={ActiveClient}\n          ClientProjects={ClientProjects}\n          setClientProjects={setClientProjects}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Client;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useCookies, Cookies } from \"react-cookie\";\nimport { useHistory } from \"react-router\";\n\n// Components\nimport Home from \"./pages/Home\";\nimport Client from \"./client/Client\";\n\nconst StyledMenu = styled.ul`\n  position: fixed;\n  top: 0;\n  right: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 0 1em;\n  align-items: center;\n  justify-content: center;\n  transition: all 300ms ease;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(100%)\")};\n  opacity: ${({ open }) => (open ? \"1\" : \"0\")};\n  \n  background-color: rgb(20, 26, 31);\n  z-index: 9;\n  }\n\n  li {\n      padding: 1em 0\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-size: 4rem;\n  transition: all 200ms linear;\n\n  &:hover {\n    color: burlywood;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 3rem;\n  }\n`;\n\nconst Menu = ({ open, toggle }) => {\n  return (\n    <Router>\n      <StyledMenu open={open}>\n        <li>\n          <StyledLink to=\"/home\" onClick={toggle}>\n            Home\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/clients\" onClick={toggle}>\n            Collaborators\n          </StyledLink>\n        </li>\n      </StyledMenu>\n\n      <Switch>\n        <Route path=\"/clients\">\n          <Client />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\n\n\nconst StyledBurger = styled.button`\n  position: fixed;\n  top: 5%;\n  right: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    div:first-child,\n    div:nth-child(3) {\n      transform: ${({ open }) => (open ? \"\" : \"scaleX(1)\")};\n    }\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ open }) => (open ? \"white\" : \"white\")};\n    transition: all 300ms linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) =>\n        open ? \"rotate(45deg)\" : \"rotate(0) scaleX(0.5)\"};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) =>\n        open ? \"rotate(-45deg)\" : \"rotate(0) scaleX(0.7)\"};\n    }\n  }\n`;\n\nconst Burger = ({ open, toggle }) => {\n  return (\n    <StyledBurger open={open} onClick={toggle}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\n\nconst Nav = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <Burger open={open} toggle={toggle} />\n      <Menu open={open} toggle={toggle} />\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { Component } from \"react\";\n\nimport Nav from \"./components/Nav\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Nav />\n        <ToastContainer />\n\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport APIService from \"../APIService\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useCookies([\"loginToken\"]);\n  const [logUser, setLogUser] = useCookies([\"fname\"]);\n  const [isLogin, setLogin] = useState(true);\n  let history = useHistory();\n\n  //   For Registration Only\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    if (token[\"loginToken\"]) {\n      history.push(\"/home\");\n    }\n  }, [token]);\n\n  const loginBtn = () => {\n    APIService.LoginUser({\n      username: username,\n      password: password,\n    })\n      .then((response) => {\n        setToken(\"loginToken\", response.token);\n        setLogUser(\"fname\", response.fname);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const registerBtn = () => {\n    APIService.CreateUser({\n      username: username,\n      first_name: fname,\n      last_name: lname,\n      email: email,\n      password: password,\n    })\n      .then(() => setLogin(true))\n      .catch((error) => console.log(error));\n  };\n  const validateEmail = (email) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n  };\n\n  return (\n    <div className=\"container\" style={{ marginTop: \"10em\" }}>\n      {isLogin ? (\n        <h1 className=\"text-white\">Login Page</h1>\n      ) : (\n        <h1 className=\"text-white\">Registration Page</h1>\n      )}\n\n      <hr className=\"bg-white\" />\n      <label htmlFor=\"username\" className=\"form-label text-light\">\n        Username\n      </label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        id=\"username\"\n        placeholder=\"Enter username...\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      {isLogin ? null : (\n        <div className=\"text-white\">\n          <br />\n          <label htmlFor=\"fname\">First Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"fname\"\n            placeholder=\"Enter first name...\"\n            value={fname}\n            onChange={(e) => setFname(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"lname\">Last Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lname\"\n            placeholder=\"Enter last name...\"\n            value={lname}\n            onChange={(e) => setLname(e.target.value)}\n          />\n          <br />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            className={`form-control ${validateEmail(email) ? \"\" : \"is-invalid\"}`}\n            id=\"email\"\n            placeholder=\"Enter email...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {!validateEmail(email) && (\n            <div className=\"invalid-feedback\">Please enter a valid email address.</div>\n          )}\n        </div>\n      )}\n      <br />\n      <label htmlFor=\"username\" className=\"form-label text-light\">\n        Password\n      </label>\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        id=\"password\"\n        placeholder=\"Enter password...\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n      {isLogin ? (\n        <button onClick={loginBtn} className=\"btn btn-primary\">\n          Login\n        </button>\n      ) : (\n        <button onClick={registerBtn} className=\"btn btn-primary\">\n          Register\n        </button>\n      )}\n\n      <div className=\"mb-3 text-white\">\n        <br />\n        {isLogin ? (\n          <h5>\n            If you don't have an account, please\n            <button\n              className=\"btn btn-primary mx-3\"\n              onClick={() => setLogin(false)}\n            >\n              Register\n            </button>\n            here\n          </h5>\n        ) : (\n          <h5>\n            If you have an account,\n            <button\n              className=\"btn btn-primary mx-3\"\n              onClick={() => setLogin(true)}\n            >\n              Login\n            </button>\n            here\n          </h5>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport Login from \"./components/Login\";\n\nfunction AuthRouter() {\n  return (\n    // We want to save the token inside a cookie so that the user stays logged in until either he/she quits the browser or logs out.\n    <CookiesProvider>\n      <Router>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/home\" component={App} />\n      </Router>\n    </CookiesProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthRouter />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}